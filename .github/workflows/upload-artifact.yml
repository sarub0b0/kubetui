name: Upload Test Binary

on:
  push:
    branches:
      - ci

env:
  CARGO_TERM_COLOR: always
  OPENSSL_VERSION: OpenSSL_1_1_1s

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ matrix.target }}-rustls
          path: target/${{ matrix.target }}/release/kubetui.exe

      - uses: actions/upload-artifact@v3
        if: matrix.os != 'windows-latest'
        with:
          name: ${{ matrix.target }}-rustls
          path: target/${{ matrix.target }}/release/kubetui

  build-windows:
    runs-on: windows-latest

    env:
      TARGET: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append

      - run: echo "OPENSSL_DIR=$env:VCPKG_ROOT\installed\x64-windows-static" | Out-File -FilePath $env:GITHUB_ENV -Append

      - run: |-
          echo "OPENSSL_LIB_DIR=$env:OPENSSL_DIR\lib" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "OPENSSL_INCLUDE_DIR=$env:OPENSSL_DIR\include" | Out-File -FilePath $env:GITHUB_ENV -Append

      - run: vcpkg install openssl:x64-windows-static

      - uses: dtolnay/rust-toolchain@stable

      - run: cargo build --release --no-default-features --features openssl-tls --target $env:TARGET

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TARGET }}-openssl
          path: target/${{ env.TARGET }}/release/kubetui.exe

  build-linux:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

    runs-on: ubuntu-latest

    env:
      OPENSSL_DIR: /opt/openssl
      OPENSSL_INCLUDE_DIR: /opt/openssl/include
      OPENSSL_LIB_DIR: /opt/openssl/lib
      OPENSSL_STATIC: true
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install Packages
        run: |
          sudo apt-get install libssl-dev

      - name: Make OpenSSL
        if: matrix.target == 'x86_64-unknown-linux-musl'
        env:
          OPENSSL_DIR: /opt/openssl
          OPENSSL_INCLUDE_DIR: /opt/openssl/include
          OPENSSL_LIB_DIR: /opt/openssl/lib
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools linux-headers-generic

          sudo ln -sv /usr/include/linux /usr/include/x86_64-linux-musl/linux
          sudo ln -sv /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm
          sudo ln -sv /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic

          mkdir /tmp/build
          cd /tmp/build

          curl -L https://github.com/openssl/openssl/archive/${{ env.OPENSSL_VERSION }}.tar.gz | tar --strip-components=1 -xzf -

          export CC=musl-gcc

          ./Configure linux-x86_64 --prefix=$OPENSSL_DIR -fPIC no-shared

          make depend
          make -j
          make install_sw

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: |
          if [[ "${{ matrix.target }}" != "x86_64-unknown-linux-musl" ]]; then
              unset OPENSSL_DIR
              unset OPENSSL_LIB_DIR
              unset OPENSSL_INCLUDE_DIR
              unset OPENSSL_STATIC
          fi
          cargo build --release --no-default-features --features openssl-tls --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-openssl
          path: target/${{ matrix.target }}/release/kubetui

  build-macos:
    runs-on: macos-latest

    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            openssl: darwin64-x86_64-cc
          - target: aarch64-apple-darwin
            openssl: darwin64-arm64-cc
    env:
      OPENSSL_DIR: /tmp/openssl
      OPENSSL_INCLUDE_DIR: /tmp/openssl/include
      OPENSSL_LIB_DIR: /tmp/openssl/lib
      OPENSSL_STATIC: true

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Make OpenSSL
        run: |
          mkdir /tmp/openssl-build
          cd /tmp/openssl-build

          curl -L https://github.com/openssl/openssl/archive/${{ env.OPENSSL_VERSION }}.tar.gz | tar --strip-components=1 -xzf -

          ./Configure ${{ matrix.openssl }} --prefix=$OPENSSL_DIR -fPIC no-shared

          make depend
          make -j
          make install_sw

      - run: cargo build --release --no-default-features --features openssl-tls --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-openssl
          path: target/${{ matrix.target }}/release/kubetui
